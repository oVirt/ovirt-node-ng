---
name: Check patch

permissions:
  pull-requests: read
  contents: read

on:
  push:
  pull_request:

jobs:
  build-el8:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: centos-stream-8
            shortcut: cs8
            container-name: el8stream
          - name: centos-stream-9
            shortcut: cs9
            container-name: el9stream

    name: ${{ matrix.name }}

    env:
      ARTIFACTS_DIR: exported-artifacts

    container:
      image: quay.io/ovirt/buildcontainer:${{ matrix.container-name }}

    steps:
      - name: prepare env
        run: |
           mkdir -p ${PWD}/tmp.repos/BUILD
           dnf install -y --setopt=tsflags=nodocs python3-devel git dnf-plugins-core xz rpm-build
           dnf install -y --setopt=tsflags=nodocs python3-pycodestyle python3-pyflakes

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: autogen
        run: ./autogen.sh --disable-image --disable-docs --disable-tools

      - name: check code
        run: make -j -C src check-code

      - name: Build RPM
        run: make rpm

      - name: Collect artifacts
        run: |
          mkdir -p exported-artifacts
          find tmp.repos -iname \*rpm -exec mv "{}" exported-artifacts/ \;
          mv ./*tar.xz exported-artifacts/

      - name: test install
        run: |
          dnf --downloadonly install -y exported-artifacts/*noarch.rpm

      - name: Upload artifacts
        uses: ovirt/upload-rpms-action@v2
        with:
          directory: ${{ env.ARTIFACTS_DIR}}
